import umap
import numpy as np
from sklearn.neighbors import NearestNeighbors

class UMAPAnalysis:
    """
    Class for performing UMAP analysis and calculating Riemannian distances.
    
    Attributes:
        n_neighbors (int): Number of nearest neighbors to consider in UMAP.
        min_dist (float): Effective minimum distance between embedded points.
        metric (str): Distance metric used in UMAP.
        reducer (umap.UMAP): Configured UMAP model instance.
    """

    def __init__(self, n_neighbors=3, min_dist=0.1, metric='euclidean'):
        """
        Initializes the UMAPAnalysis instance with UMAP configurations.
        
        Parameters:
            n_neighbors (int): Number of neighbors for UMAP.
            min_dist (float): Minimum distance in UMAP.
            metric (str): Distance metric used in UMAP.
        """
        self.n_neighbors = n_neighbors
        self.min_dist = min_dist
        self.metric = metric
        self.reducer = umap.UMAP(n_neighbors=self.n_neighbors, min_dist=self.min_dist, metric=self.metric)

    def calculate_umap_graph_similarities(self, data):
        """
        Calculates and returns dissimilarities between rows generated by UMAP.
        
        Parameters:
            data (numpy.ndarray): Input data.
        
        Returns:
            numpy.ndarray: UMAP similarities matrix.
        """
        self.reducer.fit(data)
        umap_graph = self.reducer.graph_
        dense_graph = umap_graph.todense()
        return np.array(dense_graph)
